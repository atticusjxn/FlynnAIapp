import React from 'react';
import type { LucideIcon, LucideProps } from 'lucide-react-native';
import {
  AlertCircle,
  AlertTriangle,
  ArrowLeft,
  ArrowRight,
  Bell,
  Briefcase,
  Building2,
  Calendar,
  Calculator,
  Camera,
  Car,
  Check,
  CheckCircle,
  CircleHelp,
  CirclePlus,
  Clock,
  Code,
  ExternalLink,
  File,
  FileText,
  Grid2X2,
  Grid3X3,
  Hammer,
  Heart,
  Home,
  Info,
  Key,
  List,
  ListChecks,
  LogOut,
  Mail,
  MapPin,
  MessageCircle,
  MessageCircleMore,
  MessagesSquare,
  Mic,
  Moon,
  Navigation,
  PawPrint,
  Pencil,
  Phone,
  PhoneCall,
  PlayCircle,
  Plus,
  ReceiptText,
  Search,
  Send,
  Settings as SettingsIcon,
  ShieldCheck,
  Signpost,
  Smartphone,
  Sparkles,
  Stethoscope,
  Timer,
  Trash2,
  Users,
  User,
  UserPlus,
  Wrench,
  X,
  XCircle,
  Zap,
  ChevronLeft,
  ChevronRight,
} from 'lucide-react-native';

const iconMap = {
  add: Plus,
  'add-circle-outline': CirclePlus,
  'alert-circle': AlertCircle,
  'apps-outline': Grid2X2,
  'arrow-back': ArrowLeft,
  'arrow-forward': ArrowRight,
  'briefcase-outline': Briefcase,
  'build-outline': Wrench,
  'business-outline': Building2,
  'calculator-outline': Calculator,
  calendar: Calendar,
  'calendar-outline': Calendar,
  call: PhoneCall,
  'call-outline': Phone,
  'camera-outline': Camera,
  'car-outline': Car,
  chatbubble: MessageCircle,
  'chatbubble-outline': MessageCircle,
  'chatbubble-ellipses-outline': MessageCircleMore,
  'chatbubbles-outline': MessagesSquare,
  checkmark: Check,
  'checkmark-circle': CheckCircle,
  'checkmark-circle-outline': CheckCircle,
  'checkmark-done-outline': ListChecks,
  'checkmark-outline': Check,
  'chevron-back': ChevronLeft,
  'chevron-forward': ChevronRight,
  close: X,
  'close-circle': XCircle,
  'close-outline': X,
  'code-working-outline': Code,
  'construct-outline': Hammer,
  'create-outline': Pencil,
  'document-outline': File,
  'document-text-outline': FileText,
  flash: Zap,
  'flash-outline': Zap,
  'heart-outline': Heart,
  home: Home,
  'home-outline': Home,
  'information-circle': Info,
  'information-circle-outline': Info,
  'key-outline': Key,
  'keypad-outline': Grid3X3,
  'list-outline': List,
  'location-outline': MapPin,
  'mail-outline': Mail,
  'medical-outline': Stethoscope,
  mic: Mic,
  'mic-outline': Mic,
  'moon-outline': Moon,
  'navigate-outline': Navigation,
  'notifications-outline': Bell,
  'open-outline': ExternalLink,
  'paper-plane-outline': Send,
  paw: PawPrint,
  people: Users,
  'people-outline': Users,
  'person-add-outline': UserPlus,
  'person-outline': User,
  'phone-portrait-outline': Smartphone,
  'play-circle': PlayCircle,
  'log-out-outline': LogOut,
  'receipt-outline': ReceiptText,
  'search-outline': Search,
  settings: SettingsIcon,
  'settings-outline': SettingsIcon,
  'shield-checkmark': ShieldCheck,
  sparkles: Sparkles,
  'sparkles-outline': Sparkles,
  'time-outline': Clock,
  'timer-outline': Timer,
  'trail-sign-outline': Signpost,
  trash: Trash2,
  'trash-outline': Trash2,
  warning: AlertTriangle,
  'warning-outline': AlertTriangle,
} satisfies Record<string, LucideIcon>;

export type FlynnIconName = keyof typeof iconMap;

export type FlynnIconProps = Omit<LucideProps, 'color' | 'size'> & {
  name: FlynnIconName | string;
  color?: string;
  size?: number;
};

export function FlynnIcon({
  name,
  color = '#1f2933',
  size = 24,
  strokeWidth = 1.75,
  ...rest
}: FlynnIconProps) {
  const IconComponent = (iconMap as Record<string, LucideIcon>)[name] ?? CircleHelp;
  return (
    <IconComponent
      color={color}
      size={size}
      strokeWidth={strokeWidth}
      absoluteStrokeWidth
      {...rest}
    />
  );
}
